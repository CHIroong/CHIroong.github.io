// request 객체 생성
var req = null;
function create_request() {
    var request = null;
    try {
        request = new XMLHttpRequest();
    } catch (trymicrosoft) {
        try {
            request = new ActiveXObject("Msxml12.XMLHTTP");
        } catch (othermicrosoft) {
            try {
                request = new ActiveXObject("Microsoft.XMLHTTP");
            } catch (failed) {
                request = null;
            }
        }
    }
    if (request == null)
        alert("Error creating request object!");
    else
        return request;
}

// 트랙백을 사용한다면 토큰을 실시간으로 생성
var trackback_url = "";
function trackback_send_server(url) {
    req = create_request();
    trackback_url = url;
    req.onreadystatechange = function() {
        if (req.readyState == 4) {
            if (req.status == 200) {
                var token = req.responseText;
                prompt("아래 주소를 복사하세요. 이 주소는 스팸을 막기 위하여 한번만 사용 가능합니다.", trackback_url+"/"+token);
                trackback_url = "";
            }
        }
    }
    req.open("POST", he_path+'/'+he_bbs+'/'+'tb_token.php', true);
    //req.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"); 
    req.send(null);
}
var ajax = function(url,callback){ 
	this.xmlHttp = this.createHttpRequest(); 
	if(!this.check_made_xmlHttp()){return false;} 
	this.sendRequest(url,callback); 
} 

ajax.prototype.createHttpRequest= function(){ 
	if(window.ActiveXObject){ 
		try { 
			return new ActiveXObject("Msxml2.XMLHTTP") ; 
		} catch (e) { 
			try { 
				return new ActiveXObject("Microsoft.XMLHTTP") ; 
			} catch (e2) { 
				return null ; 
			} 
		} 
	}
	else if(window.XMLHttpRequest){ 
		 return new XMLHttpRequest() ; 
	}
	else { 
		return null ; 
	} 
}

ajax.prototype.sendRequest= function(url,callback){ 
	var xmlHttp = this.xmlHttp; 
	var connect_page_try=0;

	try {
		xmlHttp.open("GET", url, true);
		xmlHttp.send(null);
	}
	catch(e) {
		connect_page_try++;
		if(connect_page_try<3) {
			alert('서버와의 통신에 실패하였습니다. 재시도 합니다. try : #' + connect_page_try);			
		}
		else {
			alert('서버와의 통신에 실패하였습니다.');
			//location.href="/";
			return false;
		}
	}

    xmlHttp.onreadystatechange = function() {
		if(xmlHttp.readyState == 4&&xmlHttp.status == 200) {
			callback(xmlHttp);
		}
	}
}

ajax.prototype.check_made_xmlHttp= function(){ 
	if(!this.xmlHttp) return false; 
	else return true; 
}

ajax.prototype.debug= function(){ 
	alert(this.xmlHttp.responseText);
}